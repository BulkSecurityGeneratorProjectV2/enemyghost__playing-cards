/*
 * This file is generated by jOOQ.
*/
package com.gmo.big2.store.mysql.schema.jooq.tables.records;


import com.gmo.big2.store.mysql.schema.jooq.tables.Player;

import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlayerRecord extends UpdatableRecordImpl<PlayerRecord> implements Record4<UUID, String, String, byte[]> {

    private static final long serialVersionUID = 1049591512;

    /**
     * Setter for <code>big_two.player.player_uuid</code>.
     */
    public PlayerRecord setPlayerUuid(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>big_two.player.player_uuid</code>.
     */
    public UUID getPlayerUuid() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>big_two.player.email_address</code>.
     */
    public PlayerRecord setEmailAddress(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>big_two.player.email_address</code>.
     */
    public String getEmailAddress() {
        return (String) get(1);
    }

    /**
     * Setter for <code>big_two.player.display_name</code>.
     */
    public PlayerRecord setDisplayName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>big_two.player.display_name</code>.
     */
    public String getDisplayName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>big_two.player.password_hash</code>.
     */
    public PlayerRecord setPasswordHash(byte... value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>big_two.player.password_hash</code>.
     */
    public byte[] getPasswordHash() {
        return (byte[]) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<UUID, String, String, byte[]> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<UUID, String, String, byte[]> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field1() {
        return Player.PLAYER.PLAYER_UUID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Player.PLAYER.EMAIL_ADDRESS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Player.PLAYER.DISPLAY_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field4() {
        return Player.PLAYER.PASSWORD_HASH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID component1() {
        return getPlayerUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getEmailAddress();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getDisplayName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] component4() {
        return getPasswordHash();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value1() {
        return getPlayerUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getEmailAddress();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDisplayName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value4() {
        return getPasswordHash();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlayerRecord value1(UUID value) {
        setPlayerUuid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlayerRecord value2(String value) {
        setEmailAddress(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlayerRecord value3(String value) {
        setDisplayName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlayerRecord value4(byte... value) {
        setPasswordHash(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlayerRecord values(UUID value1, String value2, String value3, byte[] value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PlayerRecord
     */
    public PlayerRecord() {
        super(Player.PLAYER);
    }

    /**
     * Create a detached, initialised PlayerRecord
     */
    public PlayerRecord(UUID playerUuid, String emailAddress, String displayName, byte[] passwordHash) {
        super(Player.PLAYER);

        set(0, playerUuid);
        set(1, emailAddress);
        set(2, displayName);
        set(3, passwordHash);
    }
}
