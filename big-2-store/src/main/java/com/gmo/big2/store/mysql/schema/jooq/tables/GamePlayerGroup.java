/*
 * This file is generated by jOOQ.
*/
package com.gmo.big2.store.mysql.schema.jooq.tables;


import com.gmo.big2.store.mysql.schema.jooq.BigTwo;
import com.gmo.big2.store.mysql.schema.jooq.Indexes;
import com.gmo.big2.store.mysql.schema.jooq.Keys;
import com.gmo.big2.store.mysql.schema.jooq.tables.records.GamePlayerGroupRecord;
import com.gmo.big2.store.mysql.support.UUIDBinaryConverter;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GamePlayerGroup extends TableImpl<GamePlayerGroupRecord> {

    private static final long serialVersionUID = -638631025;

    /**
     * The reference instance of <code>big_two.game_player_group</code>
     */
    public static final GamePlayerGroup GAME_PLAYER_GROUP = new GamePlayerGroup();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GamePlayerGroupRecord> getRecordType() {
        return GamePlayerGroupRecord.class;
    }

    /**
     * The column <code>big_two.game_player_group.game_uuid</code>.
     */
    public final TableField<GamePlayerGroupRecord, UUID> GAME_UUID = createField("game_uuid", org.jooq.impl.SQLDataType.BINARY(16).nullable(false), this, "", new UUIDBinaryConverter());

    /**
     * The column <code>big_two.game_player_group.player_group_uuid</code>.
     */
    public final TableField<GamePlayerGroupRecord, UUID> PLAYER_GROUP_UUID = createField("player_group_uuid", org.jooq.impl.SQLDataType.BINARY(16).nullable(false), this, "", new UUIDBinaryConverter());

    /**
     * Create a <code>big_two.game_player_group</code> table reference
     */
    public GamePlayerGroup() {
        this(DSL.name("game_player_group"), null);
    }

    /**
     * Create an aliased <code>big_two.game_player_group</code> table reference
     */
    public GamePlayerGroup(String alias) {
        this(DSL.name(alias), GAME_PLAYER_GROUP);
    }

    /**
     * Create an aliased <code>big_two.game_player_group</code> table reference
     */
    public GamePlayerGroup(Name alias) {
        this(alias, GAME_PLAYER_GROUP);
    }

    private GamePlayerGroup(Name alias, Table<GamePlayerGroupRecord> aliased) {
        this(alias, aliased, null);
    }

    private GamePlayerGroup(Name alias, Table<GamePlayerGroupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BigTwo.BIG_TWO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.GAME_PLAYER_GROUP_GAME_PLAYER_GROUP_PLAYER_GROUP_FK, Indexes.GAME_PLAYER_GROUP_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GamePlayerGroupRecord> getPrimaryKey() {
        return Keys.KEY_GAME_PLAYER_GROUP_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GamePlayerGroupRecord>> getKeys() {
        return Arrays.<UniqueKey<GamePlayerGroupRecord>>asList(Keys.KEY_GAME_PLAYER_GROUP_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<GamePlayerGroupRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<GamePlayerGroupRecord, ?>>asList(Keys.GAME_PLAYER_GROUP_GAME_FK, Keys.GAME_PLAYER_GROUP_PLAYER_GROUP_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GamePlayerGroup as(String alias) {
        return new GamePlayerGroup(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GamePlayerGroup as(Name alias) {
        return new GamePlayerGroup(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GamePlayerGroup rename(String name) {
        return new GamePlayerGroup(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GamePlayerGroup rename(Name name) {
        return new GamePlayerGroup(name, null);
    }
}
